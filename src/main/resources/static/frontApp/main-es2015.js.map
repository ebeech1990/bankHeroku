{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/account-details/account-details.component.ts","./src/app/components/account-details/account-details.component.html","./src/app/components/account-list/account-list.component.ts","./src/app/components/account-list/account-list.component.html","./src/app/components/add-account/add-account.component.ts","./src/app/components/add-account/add-account.component.html","./src/app/components/deposit/deposit.component.ts","./src/app/components/deposit/deposit.component.html","./src/app/components/transaction-details/transaction-details.component.ts","./src/app/components/transaction-details/transaction-details.component.html","./src/app/components/transfer/transfer.component.ts","./src/app/components/transfer/transfer.component.html","./src/app/components/withdrawal/withdrawal.component.ts","./src/app/components/withdrawal/withdrawal.component.html","./src/app/services/account-transaction.service.ts","./src/app/services/account.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountListComponent } from './components/account-list/account-list.component';\nimport { AccountDetailsComponent } from './components/account-details/account-details.component';\nimport { AddAccountComponent } from './components/add-account/add-account.component';\nimport { DepositComponent } from './components/deposit/deposit.component';\nimport { WithdrawalComponent } from './components/withdrawal/withdrawal.component';\nimport { TransactionDetailsComponent } from './components/transaction-details/transaction-details.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'accounts', pathMatch: 'full' },\n  { path: 'accounts', component: AccountListComponent },\n  { path: 'accounts/:id', component: AccountDetailsComponent },\n  { path: 'add', component: AddAccountComponent },\n  { path: 'accounts/:id/deposit', component: DepositComponent },\n  { path: 'accounts/:id/withdraw', component: WithdrawalComponent },\n  { path: 'accounts/:id/transactions', component: TransactionDetailsComponent },\n  { path: 'transfer', component: TransferComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontApp';\n}\n","<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">money makers</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"accounts\" class=\"nav-link\">Accounts</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\">Add</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"transfer\" class=\"nav-link\">Transfer</a>\n      </li>\n    </div>\n  </nav>\n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddAccountComponent } from './components/add-account/add-account.component';\nimport { AccountDetailsComponent } from './components/account-details/account-details.component';\nimport { AccountListComponent } from './components/account-list/account-list.component';\nimport { DepositComponent } from './components/deposit/deposit.component';\nimport { WithdrawalComponent } from './components/withdrawal/withdrawal.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\nimport { TransactionDetailsComponent } from './components/transaction-details/transaction-details.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddAccountComponent,\n    AccountDetailsComponent,\n    AccountListComponent,\n    DepositComponent,\n    WithdrawalComponent,\n    TransferComponent,\n    TransactionDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from 'src/app/services/account.service';\n\n\n@Component({\n  selector: 'app-account-details',\n  templateUrl: './account-details.component.html',\n  styleUrls: ['./account-details.component.css']\n})\nexport class AccountDetailsComponent implements OnInit {\n\n  currentAccount = null;\n  message = '';\n  nickname: string;\n\n\n\n  constructor(\n    private accountService: AccountService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(){\n    this.message = '';\n    this.getAccount(this.route.snapshot.paramMap.get('id'));\n\n  }\n\n  getAccount(id) {\n    this.accountService.get(id)\n      .subscribe(\n        data => {\n          this.currentAccount = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateStatus(status) {\n    const data = {\n      status: status\n    };\n\n    this.accountService.update(this.currentAccount.id, data)\n      .subscribe(\n        response => {\n          this.currentAccount.status = status;\n          this.updateAccount();\n          console.log(response);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateAccount() {\n    this.accountService.update(this.currentAccount.id, this.currentAccount)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = 'The account was updated successfully!';\n          setTimeout(() => {\n          this.reloadPage();\n        }, 1000);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  deleteAccount() {\n    this.accountService.delete(this.currentAccount.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/accounts']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  reloadPage(){\n    window.location.reload();\n  }\n\n\n\n}\n","<div *ngIf=\"currentAccount\" class=\"edit-form\">\n  <h4>Account</h4>\n  <form>\n    <div>\n      <label><strong>Id:</strong></label>\n      {{ currentAccount.id }}\n    </div>\n    <div class=\"form-group\">\n      <label for=\"nickname\">Nickname</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"nickname\"\n        [(ngModel)]=\"currentAccount.nickname\"\n        name=\"nickname\"\n      />\n    </div>\n    <div>\n      <label><strong>Balance:</strong></label>\n      {{ currentAccount.balance }}\n    </div>\n    <div class=\"form-group\">\n      <label><strong>Status:</strong></label>\n      {{ currentAccount.status ? \"Active\" : \"Inactive\" }}\n    </div>\n  </form>\n<div>\n  <button\n    class=\"badge badge-primary mr-2\"\n    *ngIf=\"currentAccount.status\"\n    (click)=\"updateStatus(false)\"\n  >\n    Deactivate\n  </button>\n  <button\n    *ngIf=\"!currentAccount.status\"\n    class=\"badge badge-primary mr-2\"\n    (click)=\"updateStatus(true)\"\n  >\n    Activate\n  </button>\n  </div>\n  <div>\n  <a class=\"badge badge-warning\" href=\"/accounts/{{ currentAccount.id }}/transactions\">\n    Transactions\n  </a>\n  </div>\n  <div>\n  <a class=\"badge badge-info\" href=\"/accounts/{{ currentAccount.id }}/deposit\">\n    Deposit\n  </a>\n  <a class=\"badge badge-info\" href=\"/accounts/{{ currentAccount.id }}/withdraw\">\n    Withdraw\n  </a>\n  \n  </div>\n  <button type=\"submit\" class=\"badge badge-success\" (click)=\"updateAccount()\">\n    Update\n  </button>\n  <button class=\"badge badge-danger mr-2\" (click)=\"deleteAccount()\">\n    Delete\n  </button>\n  <p>{{ message }}</p>\n</div>\n\n<div *ngIf=\"!currentAccount\">\n  <br />\n  <p>Cannot access this Account...</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './account-list.component.html',\n  styleUrls: ['./account-list.component.css']\n})\nexport class AccountListComponent implements OnInit {\n\n  accounts: any;\n  currentAccount = null;\n  currentIndex = -1;\n  nickname = '';\n\n  constructor(private accountService: AccountService) { }\n\n  ngOnInit(){\n    this.retrieveAccounts();\n  }\n\n  retrieveAccounts() {\n    this.accountService.getAll()\n      .subscribe(\n        data => {\n          this.accounts = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList() {\n    this.retrieveAccounts();\n    this.currentAccount = null;\n    this.currentIndex = -1;\n  }\n\n  setActiveAccount(account, index) {\n    this.currentAccount = account;\n    this.currentIndex = index;\n  }\n\n  removeAllAccounts() {\n    this.accountService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.retrieveAccounts();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchNickname() {\n    this.accountService.findByNickname(this.nickname)\n      .subscribe(\n        data => {\n          this.accounts = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n\n}\n","<div class=\"list row\">\n  <div class=\"col-md-8\">\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search by nickname\"\n        [(ngModel)]=\"nickname\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          (click)=\"searchNickname()\"\n        >\n          Search\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <h4>Accounts List</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let account of accounts; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveAccount(account, i)\"\n      >\n        {{ account.nickname }}\n      </li>\n    </ul>\n    <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllAccounts()\">\n      Remove All\n    </button>\n\n  </div>\n  <div class=\"col-md-6\">\n    <div *ngIf=\"currentAccount\">\n      <h4>Account</h4>\n      <div>\n        <label><strong>Id:</strong></label>\n        {{ currentAccount.id }}\n      </div>\n      <div>\n        <label><strong>Nickname:</strong></label> {{ currentAccount.nickname }}\n      </div>\n      <div>\n        <label><strong>Balance:</strong></label>\n        {{ currentAccount.balance }}\n      </div>\n      <div>\n        <label><strong>Status:</strong></label>\n        {{ currentAccount.status ? \"Active\" : \"Inactive\" }}\n      </div>\n      <a class=\"badge badge-warning\" href=\"/accounts/{{ currentAccount.id }}\">\n        Edit\n      </a>\n\n    </div>\n\n    <div *ngIf=\"!currentAccount\">\n      <br />\n      <p>Please click on an Account to view its details</p>\n    </div>\n    \n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-account',\n  templateUrl: './add-account.component.html',\n  styleUrls: ['./add-account.component.css']\n})\nexport class AddAccountComponent implements OnInit {\n\n  account = {\n    nickname: '',\n    balance: 0.0,\n    status: false,\n    transactions: []\n  };\n  submitted = false;\n\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router\n  ) {}\n\n\n  ngOnInit(){}\n\n  saveAccount() {\n    const data = {\n      nickname: this.account.nickname\n    };\n\n    this.accountService.create(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n          this.router.navigate(['/accounts']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newAccount() {\n    this.submitted = false;\n    this.account = {\n      nickname: '',\n      balance: 0.0,\n      status: false,\n      transactions: []\n    };\n  }\n\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n    <div class=\"form-group\">\n      <label for=\"nickname\">Nickname</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"nickname\"\n        required\n        [(ngModel)]=\"account.nickname\"\n        name=\"nickname\"\n      />\n    </div>\n\n\n    <button (click)=\"saveAccount()\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { AccountTransactionService } from 'src/app/services/account-transaction.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-deposit',\n  templateUrl: './deposit.component.html',\n  styleUrls: ['./deposit.component.css']\n})\nexport class DepositComponent implements OnInit {\ncurrentAccount = null;\n  submitted = false;\n  amount: number;\n\n\n  constructor(\n    private accountService: AccountService,\n    private accountTransactionService: AccountTransactionService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location\n  ) {}\n\n\n  ngOnInit(){\n    this.getAccount(this.route.snapshot.paramMap.get('id'));\n\n  }\n\n  getAccount(id) {\n    this.accountService.get(id)\n      .subscribe(\n        data => {\n          this.currentAccount = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n\n\n\n  updateBalance(amount) {\n    const data = {\n      amount: amount\n\n    };\n\n    // this.accountService.update(this.currentAccount.id, data)\n    this.accountService.deposit(this.currentAccount.id,this.amount,data)\n      .subscribe(\n        response => {\n          this.currentAccount.balance = response;\n           console.log(response);\n           this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\ngoBack(){\n //this.location.back();\n this.router.navigate(['/accounts/'+this.currentAccount.id], { replaceUrl: true });\n}\n\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n    <div class=\"form-group\">\n      <label for=\"amount\">Deposit amount</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"amount\"\n        required\n        [(ngModel)]=\"amount\"\n        name=\"amount\"\n      />\n    </div>\n\n\n    <button (click)=\"updateBalance(amount)\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n    <button (click)=\"goBack()\" class=\"btn btn-success\">Go Back</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-transaction-details',\n  templateUrl: './transaction-details.component.html',\n  styleUrls: ['./transaction-details.component.css']\n})\nexport class TransactionDetailsComponent implements OnInit {\n\n  transactions: any;\n  currentAccount = null;\n  currentIndex = -1;\n  currentTransaction = null;\n  nickname = '';\n\n  constructor(\n    private accountService: AccountService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) { }\n\n  ngOnInit(){\n    this.getAccount(this.route.snapshot.paramMap.get('id'));\n    this.retrieveTransactions();\n  }\n\n  getAccount(id) {\n    this.accountService.get(id)\n      .subscribe(\n        data => {\n          this.currentAccount = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  retrieveTransactions() {\n    this.accountService.getAllTransactions(this.route.snapshot.paramMap.get('id'))\n      .subscribe(\n        data => {\n          this.transactions = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList() {\n    this.retrieveTransactions();\n    this.currentTransaction = null;\n    this.currentIndex = -1;\n  }\n\n  setActiveTransaction(transaction, index) {\n    this.currentTransaction = transaction;\n    this.currentIndex = index;\n  }\n\n  goBack(){\n    this.location.back();\n  }\n\n}\n","\n  <div class=\"col-md-6\">\n    <h4>transactions</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let transaction of transactions; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveTransaction(transaction, i)\"\n      >\n        {{ transaction.transactionId }}\n      </li>\n    </ul>\n\n  </div>\n  <div class=\"col-md-6\">\n    <div *ngIf=\"currentTransaction\">\n\n      <div>\n        <label><strong>Id:</strong></label>\n        {{ currentTransaction.transactionId }}\n      </div>\n      <div>\n        <label><strong>Type:</strong></label> {{ currentTransaction.type }}\n      </div>\n      <div>\n        <label><strong>Date:</strong></label>\n        {{ currentTransaction.date }}\n      </div>\n      <div>\n        <label><strong>Amount:</strong></label>\n        {{ currentTransaction.transactionBalance }}\n      </div>\n\n    </div>\n\n    <div *ngIf=\"!currentTransaction\">\n      <br />\n      <p>Please click on a transaction to view its details</p>\n    </div>\n<button (click)=\"goBack()\" class=\"btn btn-success\">Go Back</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.css']\n})\nexport class TransferComponent implements OnInit {\n\n  withdrawAccount = null;\n  depositAccount = null;\n  withdrawId: number;\n  depositId: number;\n    submitted = false;\n    amount: number;\n    accounts: any;\n\n  constructor(\n    private accountService: AccountService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.retrieveAccounts();\n  }\n\n  retrieveAccounts() {\n    this.accountService.getAll()\n      .subscribe(\n        data => {\n          this.accounts = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  getWithdrawAccount(id){\n\n    this.accountService.get(id)\n    .subscribe(\n      data => {\n        this.withdrawAccount = data;\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      });\n\n  }\n\n  getDepositAccount(id){\n\n    this.accountService.get(id)\n    .subscribe(\n      data => {\n        this.depositAccount = data;\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      });\n\n  }\n\n  // getDepositAccount(){\n  //\n  // }\n\n  withdrawFrom(amount) {\n    const data = {\n      amount: amount\n    };\n    this.accountService.withdraw(this.withdrawAccount.id,this.amount,data)\n      .subscribe(\n        response => {\n          this.withdrawAccount.balance = response;\n           console.log(response);\n           this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  depositTo(amount) {\n    const data = {\n      amount: amount\n    };\n    this.accountService.deposit(this.depositAccount.id,this.amount,data)\n      .subscribe(\n        response => {\n          this.depositAccount.balance = response;\n           console.log(response);\n           this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateBalance(amount){\n    this.withdrawFrom(amount);\n    this.depositTo(amount);\n  }\n\ngoBack(){\n //this.location.back();\n this.router.navigate(['/accounts']);\n}\n\n  selected(){\n    console.log(this.withdrawAccount);\n  }\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n\n    <div class=\"form-group\" *ngIf=\"accounts\">\n      <label for=\"withdrawAccountInput\">Withdraw From</label>\n        <select [(ngModel)]=\"withdrawId\" class=\"form-control\" id=\"withdrawAccountInput\" (change)=\"getWithdrawAccount(withdrawId)\">\n            <option  *ngFor=\"let account of accounts\" [(ngValue)]=\"account.id\">{{account.nickname}}</option>\n        </select>\n    </div>\n    <div class=\"form-group\" *ngIf=\"accounts\">\n      <label for=\"depositAccountInput\">Deposit To</label>\n        <select [(ngModel)]=\"depositId\" class=\"form-control\" id=\"depositAccountInput\" (change)=\"getDepositAccount(depositId)\">\n            <option  *ngFor=\"let account of accounts\" [(ngValue)]=\"account.id\">{{account.nickname}}</option>\n        </select>\n    </div>\n\n\n\n    <!-- <div class=\"btn-group\" *ngIf=\"accounts\">\n       <button class=\"btn btn-primary dropdown-toggle\"\n          type=\"button\"\n          id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n       Accounts\n\n       </button>\n       <div class=\"dropdown-menu\">\n         <select [(ngModel)]=\"selected\">\n\n          <option class=\"dropdown-item\" *ngFor=\"let account of accounts\" [(ngValue)]=\"account.id\">{{account.nickname}}</option>\n          </select>\n          <p>{{ selected }}</p>\n       </div>\n    </div> -->\n\n          <!-- <div class=\"form-group\">\n                    <label for=\"depositAccount\">Deposit To</label>\n                      <select class=\"form-control\" formControlName=\"accounts\" data-toggle=\"tooltip\"\n                            data-placement=\"right\" title=\"Select Account\">\n                          <option value=\"null\">--Select Account--</option>\n                         <option ng-repeat=\"account in accounts\" value=\"{{account.id}}\">{{account.id}}</option>\n                      </select>\n                </div> -->\n\n    <div class=\"form-group\">\n      <label for=\"amount\">Amount</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"amount\"\n        required\n        [(ngModel)]=\"amount\"\n        name=\"amount\"\n      />\n    </div>\n\n\n    <button (click)=\"updateBalance(amount)\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n    <button (click)=\"goBack()\" class=\"btn btn-success\">Go Back</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { AccountTransactionService } from 'src/app/services/account-transaction.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-withdrawal',\n  templateUrl: './withdrawal.component.html',\n  styleUrls: ['./withdrawal.component.css']\n})\nexport class WithdrawalComponent implements OnInit {\n\n  currentAccount = null;\n    submitted = false;\n    amount: number;\n\n  constructor(\n    private accountService: AccountService,\n    private accountTransactionService: AccountTransactionService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location\n  ) { }\n\n  ngOnInit(){\n    this.getAccount(this.route.snapshot.paramMap.get('id'));\n  }\n\n  getAccount(id) {\n    this.accountService.get(id)\n      .subscribe(\n        data => {\n          this.currentAccount = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n\n\n\n  updateBalance(balance) {\n    const data = {\n      balance: balance\n\n    };\n\n\n    this.accountService.withdraw(this.currentAccount.id,this.amount,data)\n      .subscribe(\n        response => {\n          this.currentAccount.balance = balance-this.amount;\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  goBack(){\n   //this.location.back();\n   this.router.navigate(['/accounts/'+this.currentAccount.id], { replaceUrl: true });\n  }\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n    <div class=\"form-group\">\n      <label for=\"amount\">Withdraw amount</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"amount\"\n        required\n        [(ngModel)]=\"amount\"\n        name=\"amount\"\n      />\n    </div>\n\n\n    <button (click)=\"updateBalance(amount)\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n    <button (click)=\"goBack()\" class=\"btn btn-success\">Go Back</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:8080/api/accounts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountTransactionService {\n\n\n\n  constructor(private http: HttpClient) { }\n\n\n  // deposit(id, amount, data) {\n  //   return this.http.put(`${baseUrl}/${id}/deposit?amount=${amount}`, data);\n  // }\n  //\n  // withdrawal(id, data) {\n  //   return this.http.put(`${baseUrl}/${id}/withdrawal`, data);\n  // }\n  //\n  // transfer(id, data) {\n  //   return this.http.put(`${baseUrl}/${id}/transfer`, data);\n  // }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:8080/api/accounts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n\n  findByNickname(nickname) {\n    return this.http.get(`${baseUrl}?nickname=${nickname}`);\n  }\n  getAllTransactions(id){\n    return this.http.get(`${baseUrl}/${id}/transactions`);\n  }\n\n  deposit(id, amount, data) {\n    return this.http.put(`${baseUrl}/${id}/deposit?amount=${amount}`, data);\n  }\n\n  withdraw(id, amount, data) {\n    return this.http.put(`${baseUrl}/${id}/withdraw?amount=${amount}`, data);\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}