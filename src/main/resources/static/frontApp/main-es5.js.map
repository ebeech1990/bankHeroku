{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/account-details/account-details.component.ts","webpack:///src/app/components/account-details/account-details.component.html","webpack:///src/app/components/account-list/account-list.component.ts","webpack:///src/app/components/account-list/account-list.component.html","webpack:///src/app/components/add-account/add-account.component.ts","webpack:///src/app/components/add-account/add-account.component.html","webpack:///src/app/components/deposit/deposit.component.ts","webpack:///src/app/components/deposit/deposit.component.html","webpack:///src/app/components/transaction-details/transaction-details.component.ts","webpack:///src/app/components/transaction-details/transaction-details.component.html","webpack:///src/app/components/transfer/transfer.component.ts","webpack:///src/app/components/transfer/transfer.component.html","webpack:///src/app/components/withdrawal/withdrawal.component.ts","webpack:///src/app/components/withdrawal/withdrawal.component.html","webpack:///src/app/services/account-transaction.service.ts","webpack:///src/app/services/account.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AccountDetailsComponent","accountService","route","router","currentAccount","message","getAccount","snapshot","paramMap","get","subscribe","data","console","log","error","status","update","response","updateAccount","setTimeout","reloadPage","navigate","window","location","reload","AccountListComponent","currentIndex","nickname","retrieveAccounts","getAll","accounts","account","index","deleteAll","findByNickname","searchNickname","removeAllAccounts","AddAccountComponent","balance","transactions","submitted","create","DepositComponent","accountTransactionService","amount","deposit","replaceUrl","TransactionDetailsComponent","currentTransaction","retrieveTransactions","getAllTransactions","transaction","back","goBack","TransferComponent","withdrawAccount","depositAccount","withdraw","withdrawFrom","depositTo","WithdrawalComponent","baseUrl","AccountTransactionService","http","providedIn","AccountService","post","put","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountListComponent } from './components/account-list/account-list.component';\nimport { AccountDetailsComponent } from './components/account-details/account-details.component';\nimport { AddAccountComponent } from './components/add-account/add-account.component';\nimport { DepositComponent } from './components/deposit/deposit.component';\nimport { WithdrawalComponent } from './components/withdrawal/withdrawal.component';\nimport { TransactionDetailsComponent } from './components/transaction-details/transaction-details.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'accounts', pathMatch: 'full' },\n  { path: 'accounts', component: AccountListComponent },\n  { path: 'accounts/:id', component: AccountDetailsComponent },\n  { path: 'add', component: AddAccountComponent },\n  { path: 'accounts/:id/deposit', component: DepositComponent },\n  { path: 'accounts/:id/withdraw', component: WithdrawalComponent },\n  { path: 'accounts/:id/transactions', component: TransactionDetailsComponent },\n  { path: 'transfer', component: TransferComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontApp';\n}\n","<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">money makers</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"accounts\" class=\"nav-link\">Accounts</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\">Add</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"transfer\" class=\"nav-link\">Transfer</a>\n      </li>\n    </div>\n  </nav>\n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddAccountComponent } from './components/add-account/add-account.component';\nimport { AccountDetailsComponent } from './components/account-details/account-details.component';\nimport { AccountListComponent } from './components/account-list/account-list.component';\nimport { DepositComponent } from './components/deposit/deposit.component';\nimport { WithdrawalComponent } from './components/withdrawal/withdrawal.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\nimport { TransactionDetailsComponent } from './components/transaction-details/transaction-details.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddAccountComponent,\n    AccountDetailsComponent,\n    AccountListComponent,\n    DepositComponent,\n    WithdrawalComponent,\n    TransferComponent,\n    TransactionDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from 'src/app/services/account.service';\n\n\n@Component({\n  selector: 'app-account-details',\n  templateUrl: './account-details.component.html',\n  styleUrls: ['./account-details.component.css']\n})\nexport class AccountDetailsComponent implements OnInit {\n\n  currentAccount = null;\n  message = '';\n  nickname: string;\n\n\n\n  constructor(\n    private accountService: AccountService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(){\n    this.message = '';\n    this.getAccount(this.route.snapshot.paramMap.get('id'));\n\n  }\n\n  getAccount(id) {\n    this.accountService.get(id)\n      .subscribe(\n        data => {\n          this.currentAccount = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateStatus(status) {\n    const data = {\n      status: status\n    };\n\n    this.accountService.update(this.currentAccount.id, data)\n      .subscribe(\n        response => {\n          this.currentAccount.status = status;\n          this.updateAccount();\n          console.log(response);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateAccount() {\n    this.accountService.update(this.currentAccount.id, this.currentAccount)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = 'The account was updated successfully!';\n          setTimeout(() => {\n          this.reloadPage();\n        }, 1000);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  deleteAccount() {\n    this.accountService.delete(this.currentAccount.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/accounts']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  reloadPage(){\n    window.location.reload();\n  }\n\n\n\n}\n","<div *ngIf=\"currentAccount\" class=\"edit-form\">\n  <h4>Account</h4>\n  <form>\n    <div>\n      <label><strong>Id:</strong></label>\n      {{ currentAccount.id }}\n    </div>\n    <div class=\"form-group\">\n      <label for=\"nickname\">Nickname</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"nickname\"\n        [(ngModel)]=\"currentAccount.nickname\"\n        name=\"nickname\"\n      />\n    </div>\n    <div>\n      <label><strong>Balance:</strong></label>\n      {{ currentAccount.balance }}\n    </div>\n    <div class=\"form-group\">\n      <label><strong>Status:</strong></label>\n      {{ currentAccount.status ? \"Active\" : \"Inactive\" }}\n    </div>\n  </form>\n<div>\n  <button\n    class=\"badge badge-primary mr-2\"\n    *ngIf=\"currentAccount.status\"\n    (click)=\"updateStatus(false)\"\n  >\n    Deactivate\n  </button>\n  <button\n    *ngIf=\"!currentAccount.status\"\n    class=\"badge badge-primary mr-2\"\n    (click)=\"updateStatus(true)\"\n  >\n    Activate\n  </button>\n  </div>\n  <div>\n  <a class=\"badge badge-warning\" href=\"/accounts/{{ currentAccount.id }}/transactions\">\n    Transactions\n  </a>\n  </div>\n  <div>\n  <a class=\"badge badge-info\" href=\"/accounts/{{ currentAccount.id }}/deposit\">\n    Deposit\n  </a>\n  <a class=\"badge badge-info\" href=\"/accounts/{{ currentAccount.id }}/withdraw\">\n    Withdraw\n  </a>\n  \n  </div>\n  <button type=\"submit\" class=\"badge badge-success\" (click)=\"updateAccount()\">\n    Update\n  </button>\n  <button class=\"badge badge-danger mr-2\" (click)=\"deleteAccount()\">\n    Delete\n  </button>\n  <p>{{ message }}</p>\n</div>\n\n<div *ngIf=\"!currentAccount\">\n  <br />\n  <p>Cannot access this Account...</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './account-list.component.html',\n  styleUrls: ['./account-list.component.css']\n})\nexport class AccountListComponent implements OnInit {\n\n  accounts: any;\n  currentAccount = null;\n  currentIndex = -1;\n  nickname = '';\n\n  constructor(private accountService: AccountService) { }\n\n  ngOnInit(){\n    this.retrieveAccounts();\n  }\n\n  retrieveAccounts() {\n    this.accountService.getAll()\n      .subscribe(\n        data => {\n          this.accounts = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList() {\n    this.retrieveAccounts();\n    this.currentAccount = null;\n    this.currentIndex = -1;\n  }\n\n  setActiveAccount(account, index) {\n    this.currentAccount = account;\n    this.currentIndex = index;\n  }\n\n  removeAllAccounts() {\n    this.accountService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.retrieveAccounts();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchNickname() {\n    this.accountService.findByNickname(this.nickname)\n      .subscribe(\n        data => {\n          this.accounts = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n\n}\n","<div class=\"list row\">\n  <div class=\"col-md-8\">\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search by nickname\"\n        [(ngModel)]=\"nickname\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          (click)=\"searchNickname()\"\n        >\n          Search\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <h4>Accounts List</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let account of accounts; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveAccount(account, i)\"\n      >\n        {{ account.nickname }}\n      </li>\n    </ul>\n    <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllAccounts()\">\n      Remove All\n    </button>\n\n  </div>\n  <div class=\"col-md-6\">\n    <div *ngIf=\"currentAccount\">\n      <h4>Account</h4>\n      <div>\n        <label><strong>Id:</strong></label>\n        {{ currentAccount.id }}\n      </div>\n      <div>\n        <label><strong>Nickname:</strong></label> {{ currentAccount.nickname }}\n      </div>\n      <div>\n        <label><strong>Balance:</strong></label>\n        {{ currentAccount.balance }}\n      </div>\n      <div>\n        <label><strong>Status:</strong></label>\n        {{ currentAccount.status ? \"Active\" : \"Inactive\" }}\n      </div>\n      <a class=\"badge badge-warning\" href=\"/accounts/{{ currentAccount.id }}\">\n        Edit\n      </a>\n\n    </div>\n\n    <div *ngIf=\"!currentAccount\">\n      <br />\n      <p>Please click on an Account to view its details</p>\n    </div>\n    \n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-account',\n  templateUrl: './add-account.component.html',\n  styleUrls: ['./add-account.component.css']\n})\nexport class AddAccountComponent implements OnInit {\n\n  account = {\n    nickname: '',\n    balance: 0.0,\n    status: false,\n    transactions: []\n  };\n  submitted = false;\n\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router\n  ) {}\n\n\n  ngOnInit(){}\n\n  saveAccount() {\n    const data = {\n      nickname: this.account.nickname\n    };\n\n    this.accountService.create(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n          this.router.navigate(['/accounts']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newAccount() {\n    this.submitted = false;\n    this.account = {\n      nickname: '',\n      balance: 0.0,\n      status: false,\n      transactions: []\n    };\n  }\n\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n    <div class=\"form-group\">\n      <label for=\"nickname\">Nickname</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"nickname\"\n        required\n        [(ngModel)]=\"account.nickname\"\n        name=\"nickname\"\n      />\n    </div>\n\n\n    <button (click)=\"saveAccount()\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { AccountTransactionService } from 'src/app/services/account-transaction.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-deposit',\n  templateUrl: './deposit.component.html',\n  styleUrls: ['./deposit.component.css']\n})\nexport class DepositComponent implements OnInit {\ncurrentAccount = null;\n  submitted = false;\n  amount: number;\n\n\n  constructor(\n    private accountService: AccountService,\n    private accountTransactionService: AccountTransactionService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location\n  ) {}\n\n\n  ngOnInit(){\n    this.getAccount(this.route.snapshot.paramMap.get('id'));\n\n  }\n\n  getAccount(id) {\n    this.accountService.get(id)\n      .subscribe(\n        data => {\n          this.currentAccount = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n\n\n\n  updateBalance(amount) {\n    const data = {\n      amount: amount\n\n    };\n\n    // this.accountService.update(this.currentAccount.id, data)\n    this.accountService.deposit(this.currentAccount.id,this.amount,data)\n      .subscribe(\n        response => {\n          this.currentAccount.balance = response;\n           console.log(response);\n           this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\ngoBack(){\n //this.location.back();\n this.router.navigate(['/accounts/'+this.currentAccount.id], { replaceUrl: true });\n}\n\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n    <div class=\"form-group\">\n      <label for=\"amount\">Deposit amount</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"amount\"\n        required\n        [(ngModel)]=\"amount\"\n        name=\"amount\"\n      />\n    </div>\n\n\n    <button (click)=\"updateBalance(amount)\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n    <button (click)=\"goBack()\" class=\"btn btn-success\">Go Back</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-transaction-details',\n  templateUrl: './transaction-details.component.html',\n  styleUrls: ['./transaction-details.component.css']\n})\nexport class TransactionDetailsComponent implements OnInit {\n\n  transactions: any;\n  currentAccount = null;\n  currentIndex = -1;\n  currentTransaction = null;\n  nickname = '';\n\n  constructor(\n    private accountService: AccountService,\n    private route: ActivatedRoute,\n    private location: Location\n  ) { }\n\n  ngOnInit(){\n    this.getAccount(this.route.snapshot.paramMap.get('id'));\n    this.retrieveTransactions();\n  }\n\n  getAccount(id) {\n    this.accountService.get(id)\n      .subscribe(\n        data => {\n          this.currentAccount = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  retrieveTransactions() {\n    this.accountService.getAllTransactions(this.route.snapshot.paramMap.get('id'))\n      .subscribe(\n        data => {\n          this.transactions = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList() {\n    this.retrieveTransactions();\n    this.currentTransaction = null;\n    this.currentIndex = -1;\n  }\n\n  setActiveTransaction(transaction, index) {\n    this.currentTransaction = transaction;\n    this.currentIndex = index;\n  }\n\n  goBack(){\n    this.location.back();\n  }\n\n}\n","\n  <div class=\"col-md-6\">\n    <h4>transactions</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let transaction of transactions; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveTransaction(transaction, i)\"\n      >\n        {{ transaction.transactionId }}\n      </li>\n    </ul>\n\n  </div>\n  <div class=\"col-md-6\">\n    <div *ngIf=\"currentTransaction\">\n\n      <div>\n        <label><strong>Id:</strong></label>\n        {{ currentTransaction.transactionId }}\n      </div>\n      <div>\n        <label><strong>Type:</strong></label> {{ currentTransaction.type }}\n      </div>\n      <div>\n        <label><strong>Date:</strong></label>\n        {{ currentTransaction.date }}\n      </div>\n      <div>\n        <label><strong>Amount:</strong></label>\n        {{ currentTransaction.transactionBalance }}\n      </div>\n\n    </div>\n\n    <div *ngIf=\"!currentTransaction\">\n      <br />\n      <p>Please click on a transaction to view its details</p>\n    </div>\n<button (click)=\"goBack()\" class=\"btn btn-success\">Go Back</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.css']\n})\nexport class TransferComponent implements OnInit {\n\n  withdrawAccount = null;\n  depositAccount = null;\n  withdrawId: number;\n  depositId: number;\n    submitted = false;\n    amount: number;\n    accounts: any;\n\n  constructor(\n    private accountService: AccountService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.retrieveAccounts();\n  }\n\n  retrieveAccounts() {\n    this.accountService.getAll()\n      .subscribe(\n        data => {\n          this.accounts = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  getWithdrawAccount(id){\n\n    this.accountService.get(id)\n    .subscribe(\n      data => {\n        this.withdrawAccount = data;\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      });\n\n  }\n\n  getDepositAccount(id){\n\n    this.accountService.get(id)\n    .subscribe(\n      data => {\n        this.depositAccount = data;\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      });\n\n  }\n\n  // getDepositAccount(){\n  //\n  // }\n\n  withdrawFrom(amount) {\n    const data = {\n      amount: amount\n    };\n    this.accountService.withdraw(this.withdrawAccount.id,this.amount,data)\n      .subscribe(\n        response => {\n          this.withdrawAccount.balance = response;\n           console.log(response);\n           this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  depositTo(amount) {\n    const data = {\n      amount: amount\n    };\n    this.accountService.deposit(this.depositAccount.id,this.amount,data)\n      .subscribe(\n        response => {\n          this.depositAccount.balance = response;\n           console.log(response);\n           this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateBalance(amount){\n    this.withdrawFrom(amount);\n    this.depositTo(amount);\n  }\n\ngoBack(){\n //this.location.back();\n this.router.navigate(['/accounts']);\n}\n\n  selected(){\n    console.log(this.withdrawAccount);\n  }\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n\n    <div class=\"form-group\" *ngIf=\"accounts\">\n      <label for=\"withdrawAccountInput\">Withdraw From</label>\n        <select [(ngModel)]=\"withdrawId\" class=\"form-control\" id=\"withdrawAccountInput\" (change)=\"getWithdrawAccount(withdrawId)\">\n            <option  *ngFor=\"let account of accounts\" [(ngValue)]=\"account.id\">{{account.nickname}}</option>\n        </select>\n    </div>\n    <div class=\"form-group\" *ngIf=\"accounts\">\n      <label for=\"depositAccountInput\">Deposit To</label>\n        <select [(ngModel)]=\"depositId\" class=\"form-control\" id=\"depositAccountInput\" (change)=\"getDepositAccount(depositId)\">\n            <option  *ngFor=\"let account of accounts\" [(ngValue)]=\"account.id\">{{account.nickname}}</option>\n        </select>\n    </div>\n\n\n\n    <!-- <div class=\"btn-group\" *ngIf=\"accounts\">\n       <button class=\"btn btn-primary dropdown-toggle\"\n          type=\"button\"\n          id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n       Accounts\n\n       </button>\n       <div class=\"dropdown-menu\">\n         <select [(ngModel)]=\"selected\">\n\n          <option class=\"dropdown-item\" *ngFor=\"let account of accounts\" [(ngValue)]=\"account.id\">{{account.nickname}}</option>\n          </select>\n          <p>{{ selected }}</p>\n       </div>\n    </div> -->\n\n          <!-- <div class=\"form-group\">\n                    <label for=\"depositAccount\">Deposit To</label>\n                      <select class=\"form-control\" formControlName=\"accounts\" data-toggle=\"tooltip\"\n                            data-placement=\"right\" title=\"Select Account\">\n                          <option value=\"null\">--Select Account--</option>\n                         <option ng-repeat=\"account in accounts\" value=\"{{account.id}}\">{{account.id}}</option>\n                      </select>\n                </div> -->\n\n    <div class=\"form-group\">\n      <label for=\"amount\">Amount</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"amount\"\n        required\n        [(ngModel)]=\"amount\"\n        name=\"amount\"\n      />\n    </div>\n\n\n    <button (click)=\"updateBalance(amount)\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n    <button (click)=\"goBack()\" class=\"btn btn-success\">Go Back</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\nimport { AccountTransactionService } from 'src/app/services/account-transaction.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-withdrawal',\n  templateUrl: './withdrawal.component.html',\n  styleUrls: ['./withdrawal.component.css']\n})\nexport class WithdrawalComponent implements OnInit {\n\n  currentAccount = null;\n    submitted = false;\n    amount: number;\n\n  constructor(\n    private accountService: AccountService,\n    private accountTransactionService: AccountTransactionService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location\n  ) { }\n\n  ngOnInit(){\n    this.getAccount(this.route.snapshot.paramMap.get('id'));\n  }\n\n  getAccount(id) {\n    this.accountService.get(id)\n      .subscribe(\n        data => {\n          this.currentAccount = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n\n\n\n  updateBalance(balance) {\n    const data = {\n      balance: balance\n\n    };\n\n\n    this.accountService.withdraw(this.currentAccount.id,this.amount,data)\n      .subscribe(\n        response => {\n          this.currentAccount.balance = balance-this.amount;\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  goBack(){\n   //this.location.back();\n   this.router.navigate(['/accounts/'+this.currentAccount.id], { replaceUrl: true });\n  }\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n    <div class=\"form-group\">\n      <label for=\"amount\">Withdraw amount</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"amount\"\n        required\n        [(ngModel)]=\"amount\"\n        name=\"amount\"\n      />\n    </div>\n\n\n    <button (click)=\"updateBalance(amount)\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n    <button (click)=\"goBack()\" class=\"btn btn-success\">Go Back</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:8080/api/accounts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountTransactionService {\n\n\n\n  constructor(private http: HttpClient) { }\n\n\n  // deposit(id, amount, data) {\n  //   return this.http.put(`${baseUrl}/${id}/deposit?amount=${amount}`, data);\n  // }\n  //\n  // withdrawal(id, data) {\n  //   return this.http.put(`${baseUrl}/${id}/withdrawal`, data);\n  // }\n  //\n  // transfer(id, data) {\n  //   return this.http.put(`${baseUrl}/${id}/transfer`, data);\n  // }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:8080/api/accounts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n\n  findByNickname(nickname) {\n    return this.http.get(`${baseUrl}?nickname=${nickname}`);\n  }\n  getAllTransactions(id){\n    return this.http.get(`${baseUrl}/${id}/transactions`);\n  }\n\n  deposit(id, amount, data) {\n    return this.http.put(`${baseUrl}/${id}/deposit?amount=${amount}`, data);\n  }\n\n  withdraw(id, amount, data) {\n    return this.http.put(`${baseUrl}/${id}/withdraw?amount=${amount}`, data);\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}